

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Jan 14 22:27:01 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F627A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Generated 22/03/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F627A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001F                     	;# 
    79     0081                     	;# 
    80     0085                     	;# 
    81     0086                     	;# 
    82     008C                     	;# 
    83     008E                     	;# 
    84     0092                     	;# 
    85     0098                     	;# 
    86     0099                     	;# 
    87     009A                     	;# 
    88     009B                     	;# 
    89     009C                     	;# 
    90     009D                     	;# 
    91     009F                     	;# 
    92     0000                     	;# 
    93     0001                     	;# 
    94     0002                     	;# 
    95     0003                     	;# 
    96     0004                     	;# 
    97     0005                     	;# 
    98     0006                     	;# 
    99     000A                     	;# 
   100     000B                     	;# 
   101     000C                     	;# 
   102     000E                     	;# 
   103     000E                     	;# 
   104     000F                     	;# 
   105     0010                     	;# 
   106     0011                     	;# 
   107     0012                     	;# 
   108     0015                     	;# 
   109     0015                     	;# 
   110     0016                     	;# 
   111     0017                     	;# 
   112     0018                     	;# 
   113     0019                     	;# 
   114     001A                     	;# 
   115     001F                     	;# 
   116     0081                     	;# 
   117     0085                     	;# 
   118     0086                     	;# 
   119     008C                     	;# 
   120     008E                     	;# 
   121     0092                     	;# 
   122     0098                     	;# 
   123     0099                     	;# 
   124     009A                     	;# 
   125     009B                     	;# 
   126     009C                     	;# 
   127     009D                     	;# 
   128     009F                     	;# 
   129                           
   130                           	psect	idataBANK0
   131     01E3                     __pidataBANK0:
   132                           
   133                           ;initializer for _size
   134     01E3  341D               	retlw	29
   135     01E4  3400               	retlw	0
   136                           
   137                           	psect	strings
   138     0001                     __pstrings:
   139     0001                     stringtab:
   140     0001                     __stringtab:
   141     0001                     stringcode:	
   142                           ;	String table - string pointers are 1 byte each
   143                           
   144     0001                     stringdir:
   145     0001  3000               	movlw	high stringdir
   146     0002  008A               	movwf	10
   147     0003  0804               	movf	4,w
   148     0004  0A84               	incf	4,f
   149     0005  0782               	addwf	2,f
   150     0006                     __stringbase:
   151     0006  3400               	retlw	0
   152     0007                     __end_of__stringtab:
   153     0007                     _hbd_array:
   154     0007  3416               	retlw	22
   155     0008  3404               	retlw	4
   156     0009  345E               	retlw	94
   157     000A  3401               	retlw	1
   158     000B  340A               	retlw	10
   159     000C  3400               	retlw	0
   160     000D  3401               	retlw	1
   161     000E  3400               	retlw	0
   162     000F  3416               	retlw	22
   163     0010  3404               	retlw	4
   164     0011  34C8               	retlw	200
   165     0012  3400               	retlw	0
   166     0013  3496               	retlw	150
   167     0014  3404               	retlw	4
   168     0015  34F4               	retlw	244
   169     0016  3401               	retlw	1
   170     0017  3416               	retlw	22
   171     0018  3404               	retlw	4
   172     0019  34F4               	retlw	244
   173     001A  3401               	retlw	1
   174     001B  3474               	retlw	116
   175     001C  3405               	retlw	5
   176     001D  34F4               	retlw	244
   177     001E  3401               	retlw	1
   178     001F  3426               	retlw	38
   179     0020  3405               	retlw	5
   180     0021  34EE               	retlw	238
   181     0022  3402               	retlw	2
   182     0023  3416               	retlw	22
   183     0024  3404               	retlw	4
   184     0025  345E               	retlw	94
   185     0026  3401               	retlw	1
   186     0027  340A               	retlw	10
   187     0028  3400               	retlw	0
   188     0029  3401               	retlw	1
   189     002A  3400               	retlw	0
   190     002B  3416               	retlw	22
   191     002C  3404               	retlw	4
   192     002D  34C8               	retlw	200
   193     002E  3400               	retlw	0
   194     002F  3496               	retlw	150
   195     0030  3404               	retlw	4
   196     0031  34F4               	retlw	244
   197     0032  3401               	retlw	1
   198     0033  3416               	retlw	22
   199     0034  3404               	retlw	4
   200     0035  34F4               	retlw	244
   201     0036  3401               	retlw	1
   202     0037  341F               	retlw	31
   203     0038  3406               	retlw	6
   204     0039  34F4               	retlw	244
   205     003A  3401               	retlw	1
   206     003B  3474               	retlw	116
   207     003C  3405               	retlw	5
   208     003D  34EE               	retlw	238
   209     003E  3402               	retlw	2
   210     003F  3416               	retlw	22
   211     0040  3404               	retlw	4
   212     0041  345E               	retlw	94
   213     0042  3401               	retlw	1
   214     0043  340A               	retlw	10
   215     0044  3400               	retlw	0
   216     0045  3401               	retlw	1
   217     0046  3400               	retlw	0
   218     0047  3416               	retlw	22
   219     0048  3404               	retlw	4
   220     0049  34C8               	retlw	200
   221     004A  3400               	retlw	0
   222     004B  34A9               	retlw	169
   223     004C  3408               	retlw	8
   224     004D  34F4               	retlw	244
   225     004E  3401               	retlw	1
   226     004F  34E0               	retlw	224
   227     0050  3406               	retlw	6
   228     0051  34F4               	retlw	244
   229     0052  3401               	retlw	1
   230     0053  3474               	retlw	116
   231     0054  3405               	retlw	5
   232     0055  34F4               	retlw	244
   233     0056  3401               	retlw	1
   234     0057  3426               	retlw	38
   235     0058  3405               	retlw	5
   236     0059  3426               	retlw	38
   237     005A  3402               	retlw	2
   238     005B  3496               	retlw	150
   239     005C  3404               	retlw	4
   240     005D  348A               	retlw	138
   241     005E  3402               	retlw	2
   242     005F  3448               	retlw	72
   243     0060  3407               	retlw	7
   244     0061  345E               	retlw	94
   245     0062  3401               	retlw	1
   246     0063  340A               	retlw	10
   247     0064  3400               	retlw	0
   248     0065  3401               	retlw	1
   249     0066  3400               	retlw	0
   250     0067  3448               	retlw	72
   251     0068  3407               	retlw	7
   252     0069  34C8               	retlw	200
   253     006A  3400               	retlw	0
   254     006B  34E0               	retlw	224
   255     006C  3406               	retlw	6
   256     006D  34F4               	retlw	244
   257     006E  3401               	retlw	1
   258     006F  3474               	retlw	116
   259     0070  3405               	retlw	5
   260     0071  34F4               	retlw	244
   261     0072  3401               	retlw	1
   262     0073  341F               	retlw	31
   263     0074  3406               	retlw	6
   264     0075  34F4               	retlw	244
   265     0076  3401               	retlw	1
   266     0077  3474               	retlw	116
   267     0078  3405               	retlw	5
   268     0079  34E8               	retlw	232
   269     007A  3403               	retlw	3
   270     007B                     __end_of_hbd_array:
   271     0017                     _CCP1CONbits	set	23
   272     0015                     _CCPR1L	set	21
   273     0012                     _T2CON	set	18
   274     001F                     _CMCONbits	set	31
   275     0005                     _PORTAbits	set	5
   276     0092                     _PR2	set	146
   277     0433                     _TRISB3	set	1075
   278     042B                     _TRISA3	set	1067
   279     042A                     _TRISA2	set	1066
   280     0428                     _TRISA0	set	1064
   281                           
   282                           	psect	cinit
   283     03FA                     start_initialization:	
   284                           ; #config settings
   285                           
   286     03FA                     __initialization:
   287                           
   288                           ; Initialize objects allocated to BANK0
   289     03FA  21E3               	fcall	__pidataBANK0	;fetch initializer
   290     03FB  00AB               	movwf	__pdataBANK0& (0+127)
   291     03FC  21E4               	fcall	__pidataBANK0+1	;fetch initializer
   292     03FD  00AC               	movwf	(__pdataBANK0+1)& (0+127)
   293     03FE                     end_of_initialization:	
   294                           ;End of C runtime variable initialization code
   295                           
   296     03FE                     __end_of__initialization:
   297     03FE  0183               	clrf	3
   298     03FF  2A91               	ljmp	_main	;jump to C main() function
   299                           
   300                           	psect	dataBANK0
   301     002B                     __pdataBANK0:
   302     002B                     _size:
   303     002B                     	ds	2
   304                           
   305                           	psect	cstackCOMMON
   306     0070                     __pcstackCOMMON:
   307     0070                     ?_init:
   308     0070                     ?_buz_switch:	
   309                           ; 1 bytes @ 0x0
   310                           
   311     0070                     ?_delay_ms:	
   312                           ; 1 bytes @ 0x0
   313                           
   314     0070                     ?_main:	
   315                           ; 1 bytes @ 0x0
   316                           
   317     0070                     ?___wmul:	
   318                           ; 1 bytes @ 0x0
   319                           
   320     0070                     ?___aldiv:	
   321                           ; 2 bytes @ 0x0
   322                           
   323     0070                     delay_ms@ms:	
   324                           ; 4 bytes @ 0x0
   325                           
   326     0070                     buz_switch@x:	
   327                           ; 2 bytes @ 0x0
   328                           
   329     0070                     ___wmul@multiplier:	
   330                           ; 2 bytes @ 0x0
   331                           
   332     0070                     ___aldiv@divisor:	
   333                           ; 2 bytes @ 0x0
   334                           
   335                           
   336                           ; 4 bytes @ 0x0
   337     0070                     	ds	2
   338     0072                     ??_buz_switch:
   339     0072                     ??_delay_ms:	
   340                           ; 1 bytes @ 0x2
   341                           
   342     0072                     ___wmul@multiplicand:	
   343                           ; 1 bytes @ 0x2
   344                           
   345                           
   346                           ; 2 bytes @ 0x2
   347     0072                     	ds	2
   348     0074                     ??___wmul:
   349     0074                     ___wmul@product:	
   350                           ; 1 bytes @ 0x4
   351                           
   352     0074                     ___aldiv@dividend:	
   353                           ; 2 bytes @ 0x4
   354                           
   355                           
   356                           ; 4 bytes @ 0x4
   357     0074                     	ds	2
   358     0076                     ?___awdiv:
   359     0076                     ___awdiv@divisor:	
   360                           ; 2 bytes @ 0x6
   361                           
   362                           
   363                           ; 2 bytes @ 0x6
   364     0076                     	ds	2
   365     0078                     ??___aldiv:
   366     0078                     ___awdiv@dividend:	
   367                           ; 1 bytes @ 0x8
   368                           
   369                           
   370                           ; 2 bytes @ 0x8
   371     0078                     	ds	2
   372     007A                     ??___awdiv:
   373                           
   374                           ; 1 bytes @ 0xA
   375     007A                     	ds	1
   376     007B                     ??_Freq_alt:
   377                           
   378                           ; 1 bytes @ 0xB
   379     007B                     	ds	2
   380     007D                     Freq_alt@duty_cycle:
   381                           
   382                           ; 1 bytes @ 0xD
   383     007D                     	ds	1
   384     007E                     ??_init:
   385                           
   386                           	psect	cstackBANK0
   387     0020                     __pcstackBANK0:	
   388                           ; 1 bytes @ 0xE
   389                           
   390     0020                     ___aldiv@counter:
   391     0020                     ___awdiv@counter:	
   392                           ; 1 bytes @ 0x0
   393                           
   394                           
   395                           ; 1 bytes @ 0x0
   396     0020                     	ds	1
   397     0021                     ___aldiv@sign:
   398     0021                     ___awdiv@sign:	
   399                           ; 1 bytes @ 0x1
   400                           
   401                           
   402                           ; 1 bytes @ 0x1
   403     0021                     	ds	1
   404     0022                     ___awdiv@quotient:
   405     0022                     ___aldiv@quotient:	
   406                           ; 2 bytes @ 0x2
   407                           
   408                           
   409                           ; 4 bytes @ 0x2
   410     0022                     	ds	4
   411     0026                     ?_Freq_alt:
   412     0026                     Freq_alt@x:	
   413                           ; 1 bytes @ 0x6
   414                           
   415                           
   416                           ; 2 bytes @ 0x6
   417     0026                     	ds	2
   418     0028                     ??_main:
   419                           
   420                           ; 1 bytes @ 0x8
   421     0028                     	ds	1
   422     0029                     main@i:
   423                           
   424                           ; 2 bytes @ 0x9
   425     0029                     	ds	2
   426                           
   427                           	psect	maintext
   428     0291                     __pmaintext:	
   429 ;;
   430 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   431 ;;
   432 ;; *************** function _main *****************
   433 ;; Defined at:
   434 ;;		line 90 in file "main.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;  i               2    9[BANK0 ] int 
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   443 ;; Tracked objects:
   444 ;;		On entry : B00/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   448 ;;      Params:         0       0       0       0
   449 ;;      Locals:         0       2       0       0
   450 ;;      Temps:          0       1       0       0
   451 ;;      Totals:         0       3       0       0
   452 ;;Total ram usage:        3 bytes
   453 ;; Hardware stack levels required when called: 3
   454 ;; This function calls:
   455 ;;		_Freq_alt
   456 ;;		_buz_switch
   457 ;;		_delay_ms
   458 ;;		_init
   459 ;; This function is called by:
   460 ;;		Startup code after reset
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464     0291                     _main:	
   465                           ;psect for function _main
   466                           
   467     0291                     l945:	
   468                           ;incstack = 0
   469                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   470                           
   471                           
   472                           ;main.c: 92:     init();
   473     0291  220C               	fcall	_init
   474     0292                     l947:
   475                           
   476                           ;main.c: 96:         if(PORTAbits.RA0 == 0){
   477     0292  1283               	bcf	3,5	;RP0=0, select bank0
   478     0293  1303               	bcf	3,6	;RP1=0, select bank0
   479     0294  1805               	btfsc	5,0	;volatile
   480     0295  2A97               	goto	u611
   481     0296  2A98               	goto	u610
   482     0297                     u611:
   483     0297  2A92               	goto	l947
   484     0298                     u610:
   485     0298                     l949:
   486                           
   487                           ;main.c: 97:             buz_switch(1);
   488     0298  3001               	movlw	1
   489     0299  00F0               	movwf	buz_switch@x
   490     029A  3000               	movlw	0
   491     029B  00F1               	movwf	buz_switch@x+1
   492     029C  21E5               	fcall	_buz_switch
   493     029D                     l951:
   494                           
   495                           ;main.c: 98:             PORTAbits.RA3 = 1;
   496     029D  1283               	bcf	3,5	;RP0=0, select bank0
   497     029E  1303               	bcf	3,6	;RP1=0, select bank0
   498     029F  1585               	bsf	5,3	;volatile
   499     02A0                     l953:
   500                           
   501                           ;main.c: 100:             for (int i = 0; i < size; i++){
   502     02A0  01A9               	clrf	main@i
   503     02A1  01AA               	clrf	main@i+1
   504     02A2  2ADE               	goto	l963
   505     02A3                     l955:
   506                           
   507                           ;main.c: 101:                 PORTAbits.RA2 = ~PORTAbits.RA2;
   508     02A3  1003               	clrc
   509     02A4  1283               	bcf	3,5	;RP0=0, select bank0
   510     02A5  1303               	bcf	3,6	;RP1=0, select bank0
   511     02A6  1D05               	btfss	5,2	;volatile
   512     02A7  1403               	setc
   513     02A8  1803               	btfsc	3,0
   514     02A9  2AAB               	goto	u621
   515     02AA  2AAF               	goto	u620
   516     02AB                     u621:
   517     02AB  1283               	bcf	3,5	;RP0=0, select bank0
   518     02AC  1303               	bcf	3,6	;RP1=0, select bank0
   519     02AD  1505               	bsf	5,2	;volatile
   520     02AE  2AB2               	goto	u634
   521     02AF                     u620:
   522     02AF  1283               	bcf	3,5	;RP0=0, select bank0
   523     02B0  1303               	bcf	3,6	;RP1=0, select bank0
   524     02B1  1105               	bcf	5,2	;volatile
   525     02B2                     u634:
   526     02B2                     l957:
   527                           
   528                           ;main.c: 102:                 Freq_alt(hbd_array[i][0]);
   529     02B2  0829               	movf	main@i,w
   530     02B3  00A8               	movwf	??_main
   531     02B4  3001               	movlw	1
   532     02B5                     u645:
   533     02B5  1003               	clrc
   534     02B6  0DA8               	rlf	??_main,f
   535     02B7  3EFF               	addlw	-1
   536     02B8  1D03               	skipz
   537     02B9  2AB5               	goto	u645
   538     02BA  1003               	clrc
   539     02BB  0D28               	rlf	??_main,w
   540     02BC  3E01               	addlw	low ((_hbd_array-__stringbase)| (0+32768))
   541     02BD  0084               	movwf	4
   542     02BE  2001               	fcall	stringdir
   543     02BF  00A6               	movwf	Freq_alt@x
   544     02C0  2001               	fcall	stringdir
   545     02C1  00A7               	movwf	Freq_alt@x+1
   546     02C2  2247               	fcall	_Freq_alt
   547     02C3                     l959:
   548                           
   549                           ;main.c: 103:                 delay_ms(hbd_array[i][1]);
   550     02C3  1283               	bcf	3,5	;RP0=0, select bank0
   551     02C4  1303               	bcf	3,6	;RP1=0, select bank0
   552     02C5  0829               	movf	main@i,w
   553     02C6  00A8               	movwf	??_main
   554     02C7  3001               	movlw	1
   555     02C8                     u655:
   556     02C8  1003               	clrc
   557     02C9  0DA8               	rlf	??_main,f
   558     02CA  3EFF               	addlw	-1
   559     02CB  1D03               	skipz
   560     02CC  2AC8               	goto	u655
   561     02CD  1003               	clrc
   562     02CE  0D28               	rlf	??_main,w
   563     02CF  3E03               	addlw	low (((_hbd_array-__stringbase)| (0+32768)+2))
   564     02D0  0084               	movwf	4
   565     02D1  2001               	fcall	stringdir
   566     02D2  00F0               	movwf	delay_ms@ms
   567     02D3  2001               	fcall	stringdir
   568     02D4  00F1               	movwf	delay_ms@ms+1
   569     02D5  21F7               	fcall	_delay_ms
   570     02D6                     l961:
   571                           
   572                           ;main.c: 104:             }
   573     02D6  3001               	movlw	1
   574     02D7  1283               	bcf	3,5	;RP0=0, select bank0
   575     02D8  1303               	bcf	3,6	;RP1=0, select bank0
   576     02D9  07A9               	addwf	main@i,f
   577     02DA  1803               	skipnc
   578     02DB  0AAA               	incf	main@i+1,f
   579     02DC  3000               	movlw	0
   580     02DD  07AA               	addwf	main@i+1,f
   581     02DE                     l963:
   582     02DE  082A               	movf	main@i+1,w
   583     02DF  3A80               	xorlw	128
   584     02E0  00FF               	movwf	btemp+1
   585     02E1  3080               	movlw	128
   586     02E2  027F               	subwf	btemp+1,w
   587     02E3  1D03               	skipz
   588     02E4  2AE7               	goto	u665
   589     02E5  301D               	movlw	29
   590     02E6  0229               	subwf	main@i,w
   591     02E7                     u665:
   592     02E7  1C03               	skipc
   593     02E8  2AEA               	goto	u661
   594     02E9  2AEB               	goto	u660
   595     02EA                     u661:
   596     02EA  2AA3               	goto	l955
   597     02EB                     u660:
   598     02EB                     l43:
   599                           
   600                           ;main.c: 106:             PORTAbits.RA3 = 0;
   601     02EB  1283               	bcf	3,5	;RP0=0, select bank0
   602     02EC  1303               	bcf	3,6	;RP1=0, select bank0
   603     02ED  1185               	bcf	5,3	;volatile
   604     02EE                     l965:
   605                           
   606                           ;main.c: 107:             buz_switch(0);
   607     02EE  3000               	movlw	0
   608     02EF  00F0               	movwf	buz_switch@x
   609     02F0  00F1               	movwf	buz_switch@x+1
   610     02F1  21E5               	fcall	_buz_switch
   611     02F2  2A92               	goto	l947
   612     02F3  2800               	ljmp	start
   613     02F4                     __end_of_main:
   614                           
   615                           	psect	text1
   616     020C                     __ptext1:	
   617 ;; *************** function _init *****************
   618 ;; Defined at:
   619 ;;		line 115 in file "main.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0, pclath, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   633 ;;      Params:         0       0       0       0
   634 ;;      Locals:         0       0       0       0
   635 ;;      Temps:          0       0       0       0
   636 ;;      Totals:         0       0       0       0
   637 ;;Total ram usage:        0 bytes
   638 ;; Hardware stack levels used: 1
   639 ;; Hardware stack levels required when called: 2
   640 ;; This function calls:
   641 ;;		_Freq_alt
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647     020C                     _init:	
   648                           ;psect for function _init
   649                           
   650     020C                     l913:	
   651                           ;incstack = 0
   652                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   653                           
   654                           
   655                           ;main.c: 118:     CMCONbits.CM = 0b111;
   656     020C  3007               	movlw	7
   657     020D  1283               	bcf	3,5	;RP0=0, select bank0
   658     020E  1303               	bcf	3,6	;RP1=0, select bank0
   659     020F  049F               	iorwf	31,f	;volatile
   660     0210                     l915:
   661                           
   662                           ;main.c: 119:     CMCONbits.CIS = 0;
   663     0210  119F               	bcf	31,3	;volatile
   664     0211                     l917:
   665                           
   666                           ;main.c: 120:     CMCONbits.C1INV = 0;
   667     0211  121F               	bcf	31,4	;volatile
   668     0212                     l919:
   669                           
   670                           ;main.c: 121:     CMCONbits.C2INV = 0;
   671     0212  129F               	bcf	31,5	;volatile
   672     0213                     l921:
   673                           
   674                           ;main.c: 124:     TRISA0 = 1;
   675     0213  1683               	bsf	3,5	;RP0=1, select bank1
   676     0214  1303               	bcf	3,6	;RP1=0, select bank1
   677     0215  1405               	bsf	5,0	;volatile
   678     0216                     l923:
   679                           
   680                           ;main.c: 125:     TRISA2 = 0;
   681     0216  1105               	bcf	5,2	;volatile
   682     0217                     l925:
   683                           
   684                           ;main.c: 126:     TRISA3 = 0;
   685     0217  1185               	bcf	5,3	;volatile
   686     0218                     l927:
   687                           
   688                           ;main.c: 129:     TRISB3 = 0;
   689     0218  1186               	bcf	6,3	;volatile
   690     0219                     l929:
   691                           
   692                           ;main.c: 130:     T2CON = 0b00000110;
   693     0219  3006               	movlw	6
   694     021A  1283               	bcf	3,5	;RP0=0, select bank0
   695     021B  1303               	bcf	3,6	;RP1=0, select bank0
   696     021C  0092               	movwf	18	;volatile
   697     021D                     l931:
   698                           
   699                           ;main.c: 131:     Freq_alt(0);
   700     021D  3000               	movlw	0
   701     021E  00A6               	movwf	Freq_alt@x
   702     021F  00A7               	movwf	Freq_alt@x+1
   703     0220  2247               	fcall	_Freq_alt
   704     0221                     l49:
   705     0221  0008               	return
   706     0222                     __end_of_init:
   707                           
   708                           	psect	text2
   709     0247                     __ptext2:	
   710 ;; *************** function _Freq_alt *****************
   711 ;; Defined at:
   712 ;;		line 135 in file "main.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  x               2    6[BANK0 ] int 
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  duty_cycle      1   13[COMMON] unsigned char 
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0, pclath, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   726 ;;      Params:         0       2       0       0
   727 ;;      Locals:         1       0       0       0
   728 ;;      Temps:          2       0       0       0
   729 ;;      Totals:         3       2       0       0
   730 ;;Total ram usage:        5 bytes
   731 ;; Hardware stack levels used: 1
   732 ;; Hardware stack levels required when called: 1
   733 ;; This function calls:
   734 ;;		___aldiv
   735 ;;		___awdiv
   736 ;;		___wmul
   737 ;; This function is called by:
   738 ;;		_main
   739 ;;		_init
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743     0247                     _Freq_alt:	
   744                           ;psect for function _Freq_alt
   745                           
   746     0247                     l909:	
   747                           ;incstack = 0
   748                           ; Regs used in _Freq_alt: [wreg+status,2+status,0+pclath+cstack]
   749                           
   750                           
   751                           ;main.c: 137:     PR2 = (uint8_t)(((4000000)/(16*x))-1);
   752     0247  1283               	bcf	3,5	;RP0=0, select bank0
   753     0248  1303               	bcf	3,6	;RP1=0, select bank0
   754     0249  0827               	movf	Freq_alt@x+1,w
   755     024A  00FC               	movwf	??_Freq_alt+1
   756     024B  0826               	movf	Freq_alt@x,w
   757     024C  00FB               	movwf	??_Freq_alt
   758     024D  0EFB               	swapf	??_Freq_alt,f
   759     024E  0EFC               	swapf	??_Freq_alt+1,f
   760     024F  30F0               	movlw	240
   761     0250  05FC               	andwf	??_Freq_alt+1,f
   762     0251  087B               	movf	??_Freq_alt,w
   763     0252  390F               	andlw	15
   764     0253  04FC               	iorwf	??_Freq_alt+1,f
   765     0254  30F0               	movlw	240
   766     0255  05FB               	andwf	??_Freq_alt,f
   767     0256  087B               	movf	??_Freq_alt,w
   768     0257  00F0               	movwf	___aldiv@divisor
   769     0258  087C               	movf	??_Freq_alt+1,w
   770     0259  00F1               	movwf	___aldiv@divisor+1
   771     025A  3000               	movlw	0
   772     025B  1BF1               	btfsc	___aldiv@divisor+1,7
   773     025C  30FF               	movlw	255
   774     025D  00F2               	movwf	___aldiv@divisor+2
   775     025E  00F3               	movwf	___aldiv@divisor+3
   776     025F  3000               	movlw	0
   777     0260  00F7               	movwf	___aldiv@dividend+3
   778     0261  303D               	movlw	61
   779     0262  00F6               	movwf	___aldiv@dividend+2
   780     0263  3009               	movlw	9
   781     0264  00F5               	movwf	___aldiv@dividend+1
   782     0265  3000               	movlw	0
   783     0266  00F4               	movwf	___aldiv@dividend
   784     0267  235D               	fcall	___aldiv
   785     0268  0870               	movf	?___aldiv,w
   786     0269  3EFF               	addlw	255
   787     026A  1683               	bsf	3,5	;RP0=1, select bank1
   788     026B  1303               	bcf	3,6	;RP1=0, select bank1
   789     026C  0092               	movwf	18	;volatile
   790                           
   791                           ;main.c: 139:     uint8_t duty_cycle = (uint8_t)((50*PR2)/100);
   792     026D  3064               	movlw	100
   793     026E  00F6               	movwf	___awdiv@divisor
   794     026F  3000               	movlw	0
   795     0270  00F7               	movwf	___awdiv@divisor+1
   796     0271  0812               	movf	18,w	;volatile
   797     0272  00FB               	movwf	??_Freq_alt
   798     0273  01FC               	clrf	??_Freq_alt+1
   799     0274  087B               	movf	??_Freq_alt,w
   800     0275  00F0               	movwf	___wmul@multiplier
   801     0276  087C               	movf	??_Freq_alt+1,w
   802     0277  00F1               	movwf	___wmul@multiplier+1
   803     0278  3032               	movlw	50
   804     0279  00F2               	movwf	___wmul@multiplicand
   805     027A  3000               	movlw	0
   806     027B  00F3               	movwf	___wmul@multiplicand+1
   807     027C  2222               	fcall	___wmul
   808     027D  0871               	movf	?___wmul+1,w
   809     027E  00F9               	movwf	___awdiv@dividend+1
   810     027F  0870               	movf	?___wmul,w
   811     0280  00F8               	movwf	___awdiv@dividend
   812     0281  22F4               	fcall	___awdiv
   813     0282  0876               	movf	?___awdiv,w
   814     0283  00FD               	movwf	Freq_alt@duty_cycle
   815     0284                     l911:
   816                           
   817                           ;main.c: 141:     CCPR1L = duty_cycle >> 2;
   818     0284  087D               	movf	Freq_alt@duty_cycle,w
   819     0285  00FB               	movwf	??_Freq_alt
   820     0286  3002               	movlw	2
   821     0287                     u585:
   822     0287  1003               	clrc
   823     0288  0CFB               	rrf	??_Freq_alt,f
   824     0289  3EFF               	addlw	-1
   825     028A  1D03               	skipz
   826     028B  2A87               	goto	u585
   827     028C  087B               	movf	??_Freq_alt,w
   828     028D  1283               	bcf	3,5	;RP0=0, select bank0
   829     028E  1303               	bcf	3,6	;RP1=0, select bank0
   830     028F  0095               	movwf	21	;volatile
   831     0290                     l52:
   832     0290  0008               	return
   833     0291                     __end_of_Freq_alt:
   834                           
   835                           	psect	text3
   836     0222                     __ptext3:	
   837 ;; *************** function ___wmul *****************
   838 ;; Defined at:
   839 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;  multiplier      2    0[COMMON] unsigned int 
   842 ;;  multiplicand    2    2[COMMON] unsigned int 
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  product         2    4[COMMON] unsigned int 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  2    0[COMMON] unsigned int 
   847 ;; Registers used:
   848 ;;		wreg, status,2, status,0
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   854 ;;      Params:         4       0       0       0
   855 ;;      Locals:         2       0       0       0
   856 ;;      Temps:          0       0       0       0
   857 ;;      Totals:         6       0       0       0
   858 ;;Total ram usage:        6 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; This function calls:
   861 ;;		Nothing
   862 ;; This function is called by:
   863 ;;		_Freq_alt
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867     0222                     ___wmul:	
   868                           ;psect for function ___wmul
   869                           
   870     0222                     l811:	
   871                           ;incstack = 0
   872                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   873                           
   874     0222  01F4               	clrf	___wmul@product
   875     0223  01F5               	clrf	___wmul@product+1
   876     0224                     l813:
   877     0224  1C70               	btfss	___wmul@multiplier,0
   878     0225  2A27               	goto	u341
   879     0226  2A28               	goto	u340
   880     0227                     u341:
   881     0227  2A2E               	goto	l149
   882     0228                     u340:
   883     0228                     l815:
   884     0228  0872               	movf	___wmul@multiplicand,w
   885     0229  07F4               	addwf	___wmul@product,f
   886     022A  1803               	skipnc
   887     022B  0AF5               	incf	___wmul@product+1,f
   888     022C  0873               	movf	___wmul@multiplicand+1,w
   889     022D  07F5               	addwf	___wmul@product+1,f
   890     022E                     l149:
   891     022E  3001               	movlw	1
   892     022F                     u355:
   893     022F  1003               	clrc
   894     0230  0DF2               	rlf	___wmul@multiplicand,f
   895     0231  0DF3               	rlf	___wmul@multiplicand+1,f
   896     0232  3EFF               	addlw	-1
   897     0233  1D03               	skipz
   898     0234  2A2F               	goto	u355
   899     0235                     l817:
   900     0235  3001               	movlw	1
   901     0236                     u365:
   902     0236  1003               	clrc
   903     0237  0CF1               	rrf	___wmul@multiplier+1,f
   904     0238  0CF0               	rrf	___wmul@multiplier,f
   905     0239  3EFF               	addlw	-1
   906     023A  1D03               	skipz
   907     023B  2A36               	goto	u365
   908     023C                     l819:
   909     023C  0870               	movf	___wmul@multiplier,w
   910     023D  0471               	iorwf	___wmul@multiplier+1,w
   911     023E  1D03               	btfss	3,2
   912     023F  2A41               	goto	u371
   913     0240  2A42               	goto	u370
   914     0241                     u371:
   915     0241  2A24               	goto	l813
   916     0242                     u370:
   917     0242                     l821:
   918     0242  0875               	movf	___wmul@product+1,w
   919     0243  00F1               	movwf	?___wmul+1
   920     0244  0874               	movf	___wmul@product,w
   921     0245  00F0               	movwf	?___wmul
   922     0246                     l151:
   923     0246  0008               	return
   924     0247                     __end_of___wmul:
   925                           
   926                           	psect	text4
   927     02F4                     __ptext4:	
   928 ;; *************** function ___awdiv *****************
   929 ;; Defined at:
   930 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;  divisor         2    6[COMMON] int 
   933 ;;  dividend        2    8[COMMON] int 
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  quotient        2    2[BANK0 ] int 
   936 ;;  sign            1    1[BANK0 ] unsigned char 
   937 ;;  counter         1    0[BANK0 ] unsigned char 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  2    6[COMMON] int 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   947 ;;      Params:         4       0       0       0
   948 ;;      Locals:         0       4       0       0
   949 ;;      Temps:          1       0       0       0
   950 ;;      Totals:         5       4       0       0
   951 ;;Total ram usage:        9 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_Freq_alt
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960     02F4                     ___awdiv:	
   961                           ;psect for function ___awdiv
   962                           
   963     02F4                     l865:	
   964                           ;incstack = 0
   965                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   966                           
   967     02F4  1283               	bcf	3,5	;RP0=0, select bank0
   968     02F5  1303               	bcf	3,6	;RP1=0, select bank0
   969     02F6  01A1               	clrf	___awdiv@sign
   970     02F7                     l867:
   971     02F7  1FF7               	btfss	___awdiv@divisor+1,7
   972     02F8  2AFA               	goto	u481
   973     02F9  2AFB               	goto	u480
   974     02FA                     u481:
   975     02FA  2B02               	goto	l873
   976     02FB                     u480:
   977     02FB                     l869:
   978     02FB  09F6               	comf	___awdiv@divisor,f
   979     02FC  09F7               	comf	___awdiv@divisor+1,f
   980     02FD  0AF6               	incf	___awdiv@divisor,f
   981     02FE  1903               	skipnz
   982     02FF  0AF7               	incf	___awdiv@divisor+1,f
   983     0300                     l871:
   984     0300  01A1               	clrf	___awdiv@sign
   985     0301  0AA1               	incf	___awdiv@sign,f
   986     0302                     l873:
   987     0302  1FF9               	btfss	___awdiv@dividend+1,7
   988     0303  2B05               	goto	u491
   989     0304  2B06               	goto	u490
   990     0305                     u491:
   991     0305  2B0F               	goto	l879
   992     0306                     u490:
   993     0306                     l875:
   994     0306  09F8               	comf	___awdiv@dividend,f
   995     0307  09F9               	comf	___awdiv@dividend+1,f
   996     0308  0AF8               	incf	___awdiv@dividend,f
   997     0309  1903               	skipnz
   998     030A  0AF9               	incf	___awdiv@dividend+1,f
   999     030B                     l877:
  1000     030B  3001               	movlw	1
  1001     030C  00FA               	movwf	??___awdiv
  1002     030D  087A               	movf	??___awdiv,w
  1003     030E  06A1               	xorwf	___awdiv@sign,f
  1004     030F                     l879:
  1005     030F  01A2               	clrf	___awdiv@quotient
  1006     0310  01A3               	clrf	___awdiv@quotient+1
  1007     0311                     l881:
  1008     0311  0876               	movf	___awdiv@divisor,w
  1009     0312  0477               	iorwf	___awdiv@divisor+1,w
  1010     0313  1903               	btfsc	3,2
  1011     0314  2B16               	goto	u501
  1012     0315  2B17               	goto	u500
  1013     0316                     u501:
  1014     0316  2B4E               	goto	l901
  1015     0317                     u500:
  1016     0317                     l883:
  1017     0317  01A0               	clrf	___awdiv@counter
  1018     0318  0AA0               	incf	___awdiv@counter,f
  1019     0319  2B25               	goto	l889
  1020     031A                     l885:
  1021     031A  3001               	movlw	1
  1022     031B                     u515:
  1023     031B  1003               	clrc
  1024     031C  0DF6               	rlf	___awdiv@divisor,f
  1025     031D  0DF7               	rlf	___awdiv@divisor+1,f
  1026     031E  3EFF               	addlw	-1
  1027     031F  1D03               	skipz
  1028     0320  2B1B               	goto	u515
  1029     0321                     l887:
  1030     0321  3001               	movlw	1
  1031     0322  00FA               	movwf	??___awdiv
  1032     0323  087A               	movf	??___awdiv,w
  1033     0324  07A0               	addwf	___awdiv@counter,f
  1034     0325                     l889:
  1035     0325  1FF7               	btfss	___awdiv@divisor+1,7
  1036     0326  2B28               	goto	u521
  1037     0327  2B29               	goto	u520
  1038     0328                     u521:
  1039     0328  2B1A               	goto	l885
  1040     0329                     u520:
  1041     0329                     l891:
  1042     0329  3001               	movlw	1
  1043     032A                     u535:
  1044     032A  1003               	clrc
  1045     032B  0DA2               	rlf	___awdiv@quotient,f
  1046     032C  0DA3               	rlf	___awdiv@quotient+1,f
  1047     032D  3EFF               	addlw	-1
  1048     032E  1D03               	skipz
  1049     032F  2B2A               	goto	u535
  1050     0330  0877               	movf	___awdiv@divisor+1,w
  1051     0331  0279               	subwf	___awdiv@dividend+1,w
  1052     0332  1D03               	skipz
  1053     0333  2B36               	goto	u545
  1054     0334  0876               	movf	___awdiv@divisor,w
  1055     0335  0278               	subwf	___awdiv@dividend,w
  1056     0336                     u545:
  1057     0336  1C03               	skipc
  1058     0337  2B39               	goto	u541
  1059     0338  2B3A               	goto	u540
  1060     0339                     u541:
  1061     0339  2B41               	goto	l897
  1062     033A                     u540:
  1063     033A                     l893:
  1064     033A  0876               	movf	___awdiv@divisor,w
  1065     033B  02F8               	subwf	___awdiv@dividend,f
  1066     033C  0877               	movf	___awdiv@divisor+1,w
  1067     033D  1C03               	skipc
  1068     033E  03F9               	decf	___awdiv@dividend+1,f
  1069     033F  02F9               	subwf	___awdiv@dividend+1,f
  1070     0340                     l895:
  1071     0340  1422               	bsf	___awdiv@quotient,0
  1072     0341                     l897:
  1073     0341  3001               	movlw	1
  1074     0342                     u555:
  1075     0342  1003               	clrc
  1076     0343  0CF7               	rrf	___awdiv@divisor+1,f
  1077     0344  0CF6               	rrf	___awdiv@divisor,f
  1078     0345  3EFF               	addlw	-1
  1079     0346  1D03               	skipz
  1080     0347  2B42               	goto	u555
  1081     0348                     l899:
  1082     0348  3001               	movlw	1
  1083     0349  02A0               	subwf	___awdiv@counter,f
  1084     034A  1D03               	btfss	3,2
  1085     034B  2B4D               	goto	u561
  1086     034C  2B4E               	goto	u560
  1087     034D                     u561:
  1088     034D  2B29               	goto	l891
  1089     034E                     u560:
  1090     034E                     l901:
  1091     034E  0821               	movf	___awdiv@sign,w
  1092     034F  1903               	btfsc	3,2
  1093     0350  2B52               	goto	u571
  1094     0351  2B53               	goto	u570
  1095     0352                     u571:
  1096     0352  2B58               	goto	l905
  1097     0353                     u570:
  1098     0353                     l903:
  1099     0353  09A2               	comf	___awdiv@quotient,f
  1100     0354  09A3               	comf	___awdiv@quotient+1,f
  1101     0355  0AA2               	incf	___awdiv@quotient,f
  1102     0356  1903               	skipnz
  1103     0357  0AA3               	incf	___awdiv@quotient+1,f
  1104     0358                     l905:
  1105     0358  0823               	movf	___awdiv@quotient+1,w
  1106     0359  00F7               	movwf	?___awdiv+1
  1107     035A  0822               	movf	___awdiv@quotient,w
  1108     035B  00F6               	movwf	?___awdiv
  1109     035C                     l302:
  1110     035C  0008               	return
  1111     035D                     __end_of___awdiv:
  1112                           
  1113                           	psect	text5
  1114     035D                     __ptext5:	
  1115 ;; *************** function ___aldiv *****************
  1116 ;; Defined at:
  1117 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  divisor         4    0[COMMON] long 
  1120 ;;  dividend        4    4[COMMON] long 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  quotient        4    2[BANK0 ] long 
  1123 ;;  sign            1    1[BANK0 ] unsigned char 
  1124 ;;  counter         1    0[BANK0 ] unsigned char 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  4    0[COMMON] long 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1134 ;;      Params:         8       0       0       0
  1135 ;;      Locals:         0       6       0       0
  1136 ;;      Temps:          1       0       0       0
  1137 ;;      Totals:         9       6       0       0
  1138 ;;Total ram usage:       15 bytes
  1139 ;; Hardware stack levels used: 1
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_Freq_alt
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147     035D                     ___aldiv:	
  1148                           ;psect for function ___aldiv
  1149                           
  1150     035D                     l825:	
  1151                           ;incstack = 0
  1152                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1153                           
  1154     035D  1283               	bcf	3,5	;RP0=0, select bank0
  1155     035E  1303               	bcf	3,6	;RP1=0, select bank0
  1156     035F  01A1               	clrf	___aldiv@sign
  1157     0360                     l827:
  1158     0360  1FF3               	btfss	___aldiv@divisor+3,7
  1159     0361  2B63               	goto	u381
  1160     0362  2B64               	goto	u380
  1161     0363                     u381:
  1162     0363  2B71               	goto	l214
  1163     0364                     u380:
  1164     0364                     l829:
  1165     0364  09F0               	comf	___aldiv@divisor,f
  1166     0365  09F1               	comf	___aldiv@divisor+1,f
  1167     0366  09F2               	comf	___aldiv@divisor+2,f
  1168     0367  09F3               	comf	___aldiv@divisor+3,f
  1169     0368  0AF0               	incf	___aldiv@divisor,f
  1170     0369  1903               	skipnz
  1171     036A  0AF1               	incf	___aldiv@divisor+1,f
  1172     036B  1903               	skipnz
  1173     036C  0AF2               	incf	___aldiv@divisor+2,f
  1174     036D  1903               	skipnz
  1175     036E  0AF3               	incf	___aldiv@divisor+3,f
  1176     036F  01A1               	clrf	___aldiv@sign
  1177     0370  0AA1               	incf	___aldiv@sign,f
  1178     0371                     l214:
  1179     0371  1FF7               	btfss	___aldiv@dividend+3,7
  1180     0372  2B74               	goto	u391
  1181     0373  2B75               	goto	u390
  1182     0374                     u391:
  1183     0374  2B84               	goto	l835
  1184     0375                     u390:
  1185     0375                     l831:
  1186     0375  09F4               	comf	___aldiv@dividend,f
  1187     0376  09F5               	comf	___aldiv@dividend+1,f
  1188     0377  09F6               	comf	___aldiv@dividend+2,f
  1189     0378  09F7               	comf	___aldiv@dividend+3,f
  1190     0379  0AF4               	incf	___aldiv@dividend,f
  1191     037A  1903               	skipnz
  1192     037B  0AF5               	incf	___aldiv@dividend+1,f
  1193     037C  1903               	skipnz
  1194     037D  0AF6               	incf	___aldiv@dividend+2,f
  1195     037E  1903               	skipnz
  1196     037F  0AF7               	incf	___aldiv@dividend+3,f
  1197     0380                     l833:
  1198     0380  3001               	movlw	1
  1199     0381  00F8               	movwf	??___aldiv
  1200     0382  0878               	movf	??___aldiv,w
  1201     0383  06A1               	xorwf	___aldiv@sign,f
  1202     0384                     l835:
  1203     0384  3000               	movlw	0
  1204     0385  00A5               	movwf	___aldiv@quotient+3
  1205     0386  3000               	movlw	0
  1206     0387  00A4               	movwf	___aldiv@quotient+2
  1207     0388  3000               	movlw	0
  1208     0389  00A3               	movwf	___aldiv@quotient+1
  1209     038A  3000               	movlw	0
  1210     038B  00A2               	movwf	___aldiv@quotient
  1211     038C                     l837:
  1212     038C  0873               	movf	___aldiv@divisor+3,w
  1213     038D  0472               	iorwf	___aldiv@divisor+2,w
  1214     038E  0471               	iorwf	___aldiv@divisor+1,w
  1215     038F  0470               	iorwf	___aldiv@divisor,w
  1216     0390  1903               	skipnz
  1217     0391  2B93               	goto	u401
  1218     0392  2B94               	goto	u400
  1219     0393                     u401:
  1220     0393  2BE1               	goto	l857
  1221     0394                     u400:
  1222     0394                     l839:
  1223     0394  01A0               	clrf	___aldiv@counter
  1224     0395  0AA0               	incf	___aldiv@counter,f
  1225     0396  2BA4               	goto	l843
  1226     0397                     l841:
  1227     0397  3001               	movlw	1
  1228     0398  00F8               	movwf	??___aldiv
  1229     0399                     u415:
  1230     0399  1003               	clrc
  1231     039A  0DF0               	rlf	___aldiv@divisor,f
  1232     039B  0DF1               	rlf	___aldiv@divisor+1,f
  1233     039C  0DF2               	rlf	___aldiv@divisor+2,f
  1234     039D  0DF3               	rlf	___aldiv@divisor+3,f
  1235     039E  0BF8               	decfsz	??___aldiv,f
  1236     039F  2B99               	goto	u415
  1237     03A0  3001               	movlw	1
  1238     03A1  00F8               	movwf	??___aldiv
  1239     03A2  0878               	movf	??___aldiv,w
  1240     03A3  07A0               	addwf	___aldiv@counter,f
  1241     03A4                     l843:
  1242     03A4  1FF3               	btfss	___aldiv@divisor+3,7
  1243     03A5  2BA7               	goto	u421
  1244     03A6  2BA8               	goto	u420
  1245     03A7                     u421:
  1246     03A7  2B97               	goto	l841
  1247     03A8                     u420:
  1248     03A8                     l845:
  1249     03A8  3001               	movlw	1
  1250     03A9  00F8               	movwf	??___aldiv
  1251     03AA                     u435:
  1252     03AA  1003               	clrc
  1253     03AB  0DA2               	rlf	___aldiv@quotient,f
  1254     03AC  0DA3               	rlf	___aldiv@quotient+1,f
  1255     03AD  0DA4               	rlf	___aldiv@quotient+2,f
  1256     03AE  0DA5               	rlf	___aldiv@quotient+3,f
  1257     03AF  0BF8               	decfsz	??___aldiv,f
  1258     03B0  2BAA               	goto	u435
  1259     03B1                     l847:
  1260     03B1  0873               	movf	___aldiv@divisor+3,w
  1261     03B2  0277               	subwf	___aldiv@dividend+3,w
  1262     03B3  1D03               	skipz
  1263     03B4  2BBF               	goto	u445
  1264     03B5  0872               	movf	___aldiv@divisor+2,w
  1265     03B6  0276               	subwf	___aldiv@dividend+2,w
  1266     03B7  1D03               	skipz
  1267     03B8  2BBF               	goto	u445
  1268     03B9  0871               	movf	___aldiv@divisor+1,w
  1269     03BA  0275               	subwf	___aldiv@dividend+1,w
  1270     03BB  1D03               	skipz
  1271     03BC  2BBF               	goto	u445
  1272     03BD  0870               	movf	___aldiv@divisor,w
  1273     03BE  0274               	subwf	___aldiv@dividend,w
  1274     03BF                     u445:
  1275     03BF  1C03               	skipc
  1276     03C0  2BC2               	goto	u441
  1277     03C1  2BC3               	goto	u440
  1278     03C2                     u441:
  1279     03C2  2BD2               	goto	l853
  1280     03C3                     u440:
  1281     03C3                     l849:
  1282     03C3  0870               	movf	___aldiv@divisor,w
  1283     03C4  02F4               	subwf	___aldiv@dividend,f
  1284     03C5  0871               	movf	___aldiv@divisor+1,w
  1285     03C6  1C03               	skipc
  1286     03C7  0F71               	incfsz	___aldiv@divisor+1,w
  1287     03C8  02F5               	subwf	___aldiv@dividend+1,f
  1288     03C9  0872               	movf	___aldiv@divisor+2,w
  1289     03CA  1C03               	skipc
  1290     03CB  0F72               	incfsz	___aldiv@divisor+2,w
  1291     03CC  02F6               	subwf	___aldiv@dividend+2,f
  1292     03CD  0873               	movf	___aldiv@divisor+3,w
  1293     03CE  1C03               	skipc
  1294     03CF  0F73               	incfsz	___aldiv@divisor+3,w
  1295     03D0  02F7               	subwf	___aldiv@dividend+3,f
  1296     03D1                     l851:
  1297     03D1  1422               	bsf	___aldiv@quotient,0
  1298     03D2                     l853:
  1299     03D2  3001               	movlw	1
  1300     03D3                     u455:
  1301     03D3  1003               	clrc
  1302     03D4  0CF3               	rrf	___aldiv@divisor+3,f
  1303     03D5  0CF2               	rrf	___aldiv@divisor+2,f
  1304     03D6  0CF1               	rrf	___aldiv@divisor+1,f
  1305     03D7  0CF0               	rrf	___aldiv@divisor,f
  1306     03D8  3EFF               	addlw	-1
  1307     03D9  1D03               	skipz
  1308     03DA  2BD3               	goto	u455
  1309     03DB                     l855:
  1310     03DB  3001               	movlw	1
  1311     03DC  02A0               	subwf	___aldiv@counter,f
  1312     03DD  1D03               	btfss	3,2
  1313     03DE  2BE0               	goto	u461
  1314     03DF  2BE1               	goto	u460
  1315     03E0                     u461:
  1316     03E0  2BA8               	goto	l845
  1317     03E1                     u460:
  1318     03E1                     l857:
  1319     03E1  0821               	movf	___aldiv@sign,w
  1320     03E2  1903               	btfsc	3,2
  1321     03E3  2BE5               	goto	u471
  1322     03E4  2BE6               	goto	u470
  1323     03E5                     u471:
  1324     03E5  2BF1               	goto	l861
  1325     03E6                     u470:
  1326     03E6                     l859:
  1327     03E6  09A2               	comf	___aldiv@quotient,f
  1328     03E7  09A3               	comf	___aldiv@quotient+1,f
  1329     03E8  09A4               	comf	___aldiv@quotient+2,f
  1330     03E9  09A5               	comf	___aldiv@quotient+3,f
  1331     03EA  0AA2               	incf	___aldiv@quotient,f
  1332     03EB  1903               	skipnz
  1333     03EC  0AA3               	incf	___aldiv@quotient+1,f
  1334     03ED  1903               	skipnz
  1335     03EE  0AA4               	incf	___aldiv@quotient+2,f
  1336     03EF  1903               	skipnz
  1337     03F0  0AA5               	incf	___aldiv@quotient+3,f
  1338     03F1                     l861:
  1339     03F1  0825               	movf	___aldiv@quotient+3,w
  1340     03F2  00F3               	movwf	?___aldiv+3
  1341     03F3  0824               	movf	___aldiv@quotient+2,w
  1342     03F4  00F2               	movwf	?___aldiv+2
  1343     03F5  0823               	movf	___aldiv@quotient+1,w
  1344     03F6  00F1               	movwf	?___aldiv+1
  1345     03F7  0822               	movf	___aldiv@quotient,w
  1346     03F8  00F0               	movwf	?___aldiv
  1347     03F9                     l224:
  1348     03F9  0008               	return
  1349     03FA                     __end_of___aldiv:
  1350                           
  1351                           	psect	text6
  1352     01F7                     __ptext6:	
  1353 ;; *************** function _delay_ms *****************
  1354 ;; Defined at:
  1355 ;;		line 146 in file "main.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  ms              2    0[COMMON] unsigned int 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1369 ;;      Params:         2       0       0       0
  1370 ;;      Locals:         0       0       0       0
  1371 ;;      Temps:          1       0       0       0
  1372 ;;      Totals:         3       0       0       0
  1373 ;;Total ram usage:        3 bytes
  1374 ;; Hardware stack levels used: 1
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		_main
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382     01F7                     _delay_ms:	
  1383                           ;psect for function _delay_ms
  1384                           
  1385     01F7                     l939:	
  1386                           ;incstack = 0
  1387                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
  1388                           
  1389                           
  1390                           ;main.c: 148:    while(ms > 0){
  1391     01F7  2A05               	goto	l943
  1392     01F8                     l941:
  1393                           
  1394                           ;main.c: 149:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1395     01F8  30C7               	movlw	199
  1396     01F9  00F2               	movwf	??_delay_ms
  1397     01FA                     u677:
  1398     01FA  29FB               	nop2
  1399     01FB  0BF2               	decfsz	??_delay_ms,f
  1400     01FC  29FA               	goto	u677
  1401     01FD  29FE               	nop2
  1402     01FE  29FF               	nop2
  1403                           
  1404                           ;main.c: 150:       ms--;
  1405     01FF  3001               	movlw	1
  1406     0200  02F0               	subwf	delay_ms@ms,f
  1407     0201  3000               	movlw	0
  1408     0202  1C03               	skipc
  1409     0203  03F1               	decf	delay_ms@ms+1,f
  1410     0204  02F1               	subwf	delay_ms@ms+1,f
  1411     0205                     l943:
  1412                           
  1413                           ;main.c: 148:    while(ms > 0){
  1414     0205  0870               	movf	delay_ms@ms,w
  1415     0206  0471               	iorwf	delay_ms@ms+1,w
  1416     0207  1D03               	btfss	3,2
  1417     0208  2A0A               	goto	u601
  1418     0209  2A0B               	goto	u600
  1419     020A                     u601:
  1420     020A  29F8               	goto	l941
  1421     020B                     u600:
  1422     020B                     l58:
  1423     020B  0008               	return
  1424     020C                     __end_of_delay_ms:
  1425                           
  1426                           	psect	text7
  1427     01E5                     __ptext7:	
  1428 ;; *************** function _buz_switch *****************
  1429 ;; Defined at:
  1430 ;;		line 154 in file "main.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  x               2    0[COMMON] int 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1444 ;;      Params:         2       0       0       0
  1445 ;;      Locals:         0       0       0       0
  1446 ;;      Temps:          0       0       0       0
  1447 ;;      Totals:         2       0       0       0
  1448 ;;Total ram usage:        2 bytes
  1449 ;; Hardware stack levels used: 1
  1450 ;; This function calls:
  1451 ;;		Nothing
  1452 ;; This function is called by:
  1453 ;;		_main
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457     01E5                     _buz_switch:	
  1458                           ;psect for function _buz_switch
  1459                           
  1460     01E5                     l933:	
  1461                           ;incstack = 0
  1462                           ; Regs used in _buz_switch: [wreg+status,2+status,0]
  1463                           
  1464                           
  1465                           ;main.c: 155:     if (x){
  1466     01E5  0870               	movf	buz_switch@x,w
  1467     01E6  0471               	iorwf	buz_switch@x+1,w
  1468     01E7  1903               	btfsc	3,2
  1469     01E8  29EA               	goto	u591
  1470     01E9  29EB               	goto	u590
  1471     01EA                     u591:
  1472     01EA  29F2               	goto	l937
  1473     01EB                     u590:
  1474     01EB                     l935:
  1475                           
  1476                           ;main.c: 156:         CCP1CONbits.CCP1M = 0b1100;
  1477     01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1478     01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1479     01ED  0817               	movf	23,w	;volatile
  1480     01EE  39F0               	andlw	-16
  1481     01EF  380C               	iorlw	12
  1482     01F0  0097               	movwf	23	;volatile
  1483                           
  1484                           ;main.c: 157:     }
  1485     01F1  29F6               	goto	l63
  1486     01F2                     l937:
  1487                           
  1488                           ;main.c: 159:         CCP1CONbits.CCP1M = 0b0000;
  1489     01F2  30F0               	movlw	-16
  1490     01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1491     01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1492     01F5  0597               	andwf	23,f	;volatile
  1493     01F6                     l63:
  1494     01F6  0008               	return
  1495     01F7                     __end_of_buz_switch:
  1496     007E                     btemp	set	126	;btemp
  1497     007E                     wtemp0	set	126
  1498                           
  1499                           	psect	config
  1500                           
  1501                           ;Config register CONFIG @ 0x2007
  1502                           ;	Oscillator Selection bits
  1503                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  1504                           ;	Watchdog Timer Enable bit
  1505                           ;	WDTE = OFF, WDT disabled
  1506                           ;	Power-up Timer Enable bit
  1507                           ;	PWRTE = ON, PWRT enabled
  1508                           ;	RA5/MCLR/VPP Pin Function Select bit
  1509                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
  1510                           ;	Brown-out Detect Enable bit
  1511                           ;	BOREN = ON, BOD enabled
  1512                           ;	Low-Voltage Programming Enable bit
  1513                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  1514                           ;	Data EE Memory Code Protection bit
  1515                           ;	CPD = OFF, Data memory code protection off
  1516                           ;	Flash Program Memory Code Protection bit
  1517                           ;	CP = OFF, Code protection off
  1518     2007                     	org	8199
  1519     2007  3F50               	dw	16208

Data Sizes:
    Strings     0
    Constant    116
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      13
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Freq_alt
    _init->_Freq_alt
    _Freq_alt->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_Freq_alt
    _init->_Freq_alt
    _Freq_alt->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3031
                                              8 BANK0      3     3      0
                           _Freq_alt
                         _buz_switch
                           _delay_ms
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    1345
                           _Freq_alt
 ---------------------------------------------------------------------------------
 (2) _Freq_alt                                             5     3      2    1345
                                             11 COMMON     3     3      0
                                              6 BANK0      2     0      2
                            ___aldiv
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2      99
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _buz_switch                                           2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Freq_alt
     ___aldiv
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _buz_switch
   _delay_ms
   _init
     _Freq_alt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B       D       3       16.2%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1B      10        0.0%
ABS                  0      0      1B       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Jan 14 22:27:01 2024

                      pc 0002                       l43 02EB                       l52 0290  
                     l63 01F6                       l49 0221                       l58 020B  
           ___awdiv@sign 0021                       fsr 0004      ___wmul@multiplicand 0072  
                    l214 0371                      l302 035C                      l151 0246  
                    l224 03F9                      l149 022E                      l811 0222  
                    l901 034E                      l821 0242                      l813 0224  
                    l831 0375                      l903 0353                      l815 0228  
                    l911 0284                      l841 0397                      l833 0380  
                    l825 035D                      l905 0358                      l817 0235  
                    l921 0213                      l913 020C                      l851 03D1  
                    l843 03A4                      l835 0384                      l827 0360  
                    l819 023C                      l931 021D                      l923 0216  
                    l915 0210                      l933 01E5                      l941 01F8  
                    l861 03F1                      l853 03D2                      l845 03A8  
                    l837 038C                      l829 0364                      l909 0247  
                    l925 0217                      l917 0211                      l935 01EB  
                    l943 0205                      l855 03DB                      l847 03B1  
                    l839 0394                      l871 0300                      l927 0218  
                    l919 0212                      l951 029D                      l937 01F2  
                    l849 03C3                      l857 03E1                      l881 0311  
                    l873 0302                      l865 02F4                      l929 0219  
                    l961 02D6                      l953 02A0                      l945 0291  
                    l939 01F7                      l859 03E6                      l891 0329  
                    l883 0317                      l875 0306                      l867 02F7  
                    l955 02A3                      l963 02DE                      l947 0292  
                    l893 033A                      l885 031A                      l877 030B  
                    l869 02FB                      l965 02EE                      l957 02B2  
                    l949 0298                      l895 0340                      l887 0321  
                    l879 030F                      l959 02C3                      l897 0341  
                    l889 0325                      l899 0348                      u400 0394  
                    u401 0393                      u420 03A8                      u500 0317  
                    u340 0228                      u421 03A7                      u501 0316  
                    u341 0227                      _PR2 0092                      u415 0399  
                    u600 020B                      u440 03C3                      u520 0329  
                    u601 020A                      u441 03C2                      u521 0328  
                    u370 0242                      u610 0298                      u435 03AA  
                    u515 031B                      u371 0241                      u355 022F  
                    u611 0297                      u460 03E1                      u380 0364  
                    u540 033A                      u620 02AF                      u461 03E0  
                    u445 03BF                      u381 0363                      u541 0339  
                    u365 0236                      u621 02AB                      u470 03E6  
                    u390 0375                      u471 03E5                      u455 03D3  
                    u391 0374                      u535 032A                      u560 034E  
                    u480 02FB                      u561 034D                      u545 0336  
                    u481 02FA                      u570 0353                      u490 0306  
                    u634 02B2                      u571 0352                      u555 0342  
                    u491 0305                      u660 02EB                      u661 02EA  
                    u645 02B5                      u590 01EB                      u591 01EA  
                    u655 02C8                      u585 0287                      u665 02E7  
                    u677 01FA                      fsr0 0004                     _main 0291  
                   _init 020C                     _size 002B                     btemp 007E  
                   start 0000          __end_of___aldiv 03FA                    ?_main 0070  
                  ?_init 0070          __end_of___awdiv 035D          ___awdiv@divisor 0076  
                  _T2CON 0012          ___awdiv@counter 0020                    main@i 0029  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 03FA             __end_of_main 02F4             __end_of_init 0222  
       __end_of_Freq_alt 0291                   ??_main 0028                   ??_init 007E  
                 _CCPR1L 0015         ___awdiv@dividend 0078                   _TRISA0 0428  
                 _TRISA2 042A                   _TRISA3 042B                   _TRISB3 0433  
       __end_of_delay_ms 020C                ??___aldiv 0078                   ___wmul 0222  
              ??___awdiv 007A              buz_switch@x 0070         ___awdiv@quotient 0022  
__end_of__initialization 03FE           __pcstackCOMMON 0070             __pidataBANK0 01E3  
              ?_Freq_alt 0026               __pmaintext 0291                  ?___wmul 0070  
              ?_delay_ms 0070               __stringtab 0001               ??_Freq_alt 007B  
      __end_of_hbd_array 007B                  ___aldiv 035D                  ___awdiv 02F4  
              _CMCONbits 001F               _buz_switch 01E5                  __ptext1 020C  
                __ptext2 0247                  __ptext3 0222                  __ptext4 02F4  
                __ptext5 035D                  __ptext6 01F7                  __ptext7 01E5  
       ___aldiv@dividend 0074               ??_delay_ms 0072               delay_ms@ms 0070  
   end_of_initialization 03FE         ___aldiv@quotient 0022                _PORTAbits 0005  
              Freq_alt@x 0026              _CCP1CONbits 0017              ?_buz_switch 0070  
         __end_of___wmul 0247      start_initialization 03FA                 ??___wmul 0074  
            __pdataBANK0 002B                ___latbits 0000            __pcstackBANK0 0020  
              _hbd_array 0007                 ?___aldiv 0070                 ?___awdiv 0076  
              __pstrings 0001          ___aldiv@divisor 0070          ___aldiv@counter 0020  
         ___wmul@product 0074              __stringbase 0006        ___wmul@multiplier 0070  
               _Freq_alt 0247             ??_buz_switch 0072       __end_of__stringtab 0007  
               _delay_ms 01F7       __end_of_buz_switch 01F7                stringcode 0001  
               stringdir 0001                 stringtab 0001             ___aldiv@sign 0021  
     Freq_alt@duty_cycle 007D  
